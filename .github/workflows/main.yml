name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/plutobook-manylinux_2_28_x86_64

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/manylinux_2_28_x86_64.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          brew update
          brew install cairo expat icu4c freetype fontconfig harfbuzz curl jpeg-turbo webp ninja meson pkg-config
      - name: Setup and Build
        run: |
          export PKG_CONFIG_PATH="/opt/homebrew/opt/icu4c/lib/pkgconfig:$PKG_CONFIG_PATH"
          meson setup build --wrap-mode=nodownload
          meson compile -C build

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-icu
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-fontconfig
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-curl-winssl
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc

      - name: Setup and Build
        run: |
          meson setup build \
            --prefix='${{ github.workspace }}/plutobook-win64' \
            --buildtype=release \
            --wrap-mode=nodownload \
            --prefer-static \
            -Dcpp_args='-DCAIRO_WIN32_STATIC_BUILD -DCURL_STATICLIB -DU_STATIC_IMPLEMENTATION'
          meson compile -C build
          meson install -C build --strip

      - name: Copy dependencies
        run: |
          cp -v /mingw64/bin/pkgconf.exe plutobook-win64/bin
          cp -v /mingw64/bin/libpkgconf*.dll plutobook-win64/bin
          cp -v /mingw64/bin/libgcc*.dll plutobook-win64/bin
          cp -v /mingw64/bin/libstdc++*.dll plutobook-win64/bin
          cp -v /mingw64/bin/libwinpthread*.dll plutobook-win64/bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plutobook-win64-${{ github.ref_name }}
          path: plutobook-win64-${{ github.ref_name }}/
